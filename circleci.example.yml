---
version: 2.1

# Reusable YAML fragments
attach_workspace: &attach_workspace
  attach_workspace:
    at: /tmp

check-for-docker-image: &check-for-docker-image
  run:
    name: Check for Docker image
    command: |
      if [[ "$(docker images -q $DOCKER_IMAGE_BASE:$DOCKER_TAG)" == "" ]]; then
        echo "Docker image not found in shared Docker environment! Rebuilding..."
        << pipeline.parameters.build-command >>
      else
        echo "Docker image found in shared Docker environment! Skipping rebuild..."
      fi

main-env: &main-env
  docker:
    - image: circleci/buildpack-deps:buster
  environment:
    AWS_ACCOUNT_ID: "<AWS acct number here>"
    AWS_DEFAULT_REGION: "<AWS region here>"
    # NOTE: assumes the following two env vars are defined securely in Circle CI:
    #       AWS_ACCESS_KEY_ID
    #       AWS_SECRET_ACCESS_KEY
    # and that they have push access to the AWS acct's ECR repos

setup-environment: &setup-environment
  run:
    name: Setup Environment
    command: /tmp/build/setup.sh

setup_remote_docker: &setup_remote_docker
  setup_remote_docker:
    docker_layer_caching: true

parameters:
  build-command:
    type: string
    default: |
      echo "Building container tagged as $DOCKER_IMAGE_BASE:$DOCKER_TAG..."
      docker build -t $DOCKER_IMAGE_BASE:$DOCKER_TAG .

jobs:
  download-ci-tools:
    <<: *main-env
    steps:
      - run:
          name: DL CI tools
          command: |
            curl https://raw.githubusercontent.com/leaflink/ci-tools/master/ecr/scripts.txt | wget -P /tmp/build/ -i -
            chmod -R +x /tmp/build/*.sh
      - persist_to_workspace:
          root: /tmp
          paths:
            - build

  build-docker:
    <<: *main-env
    steps:
      - checkout
      - *attach_workspace
      - *setup_remote_docker
      - *setup-environment
      - run:
          name: Build Docker image
          command: |
            << pipeline.parameters.build-command >>

  quality-checks:
    <<: *main-env
    steps:
      - checkout
      - *attach_workspace
      - *setup_remote_docker
      - *setup-environment
      - *check-for-docker-image
      - run:
          name: Test code
          command: |
            echo "Add quality checks here...."

  push-image:
    <<: *main-env
    steps:
      - checkout
      - *attach_workspace
      - *setup_remote_docker
      - *setup-environment
      - *check-for-docker-image
      - run:
          name: Setup AWS CLI
          command: /tmp/build/aws-cli.sh
      - run:
          name: Push Docker image to ECR
          command: /tmp/build/push.sh

workflows:
  version: 2
  ci:
    jobs:
      - download-ci-tools
      - build-docker:
          requires:
            - download-ci-tools
      - quality-checks:
          requires:
            - build-docker
      - push-image:
          requires:
            - quality-checks
